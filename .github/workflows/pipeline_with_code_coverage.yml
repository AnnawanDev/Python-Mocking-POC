name: Python Mocking POC

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
     build:
       runs-on: ubuntu-latest

       steps:
        - uses: actions/checkout@v2

        - name: Set up Python 3.8
          uses: actions/setup-python@v2
          with:
            python-version: 3.8

        - name: Validate Python Version
          run: python3 --version

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        - name: Lint with flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

        - name: Validate Coverage.py Version
          run: python3 -c 'import coverage; print(coverage.__version__)'

        - name: Test with unittest
          run: python main_tests.py

        - name: Run Coverage Tests
          run: python3 -m coverage run -m unittest main_tests.py

        - name: Generate Coverage Report
          run: python3 -m coverage report -m

        - name: Writing JSON report to coverage.json
          run: |
            python3 -m coverage report |
            python3 -m coverage json

#       Gets code coverage and saves it in code_coverage_percentage id
        - name: Isolate Total Coverage
          id: code_coverage_percentage
          run: | 
            jq .totals.percent_covered coverage.json
            echo "::set-output name=result::`jq .totals.percent_covered coverage.json`"

#      Code needs 80% or greater code coverage quality
        - if: steps.code_coverage_percentage.outputs.result >= 80
          name: good_quality
          run: |
            echo "Passes code quality check"

        - if: steps.code_coverage_percentage.outputs.result < 80
          name: bad_quality
          run: core.setFailed('Fails code quality check.  Code coverage needs to be ${{ env.CODE_QUALITY_THRESHOLD }}% or better')
